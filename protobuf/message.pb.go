// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.6.1
// source: protobuf/message.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type State int32

const (
	State_NilStatus   State = 1
	State_Preparing   State = 2
	State_PreAccepted State = 3
	State_Accepted    State = 4
	State_Committed   State = 5
)

// Enum value maps for State.
var (
	State_name = map[int32]string{
		1: "NilStatus",
		2: "Preparing",
		3: "PreAccepted",
		4: "Accepted",
		5: "Committed",
	}
	State_value = map[string]int32{
		"NilStatus":   1,
		"Preparing":   2,
		"PreAccepted": 3,
		"Accepted":    4,
		"Committed":   5,
	}
)

func (x State) Enum() *State {
	p := new(State)
	*p = x
	return p
}

func (x State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (State) Descriptor() protoreflect.EnumDescriptor {
	return file_protobuf_message_proto_enumTypes[0].Descriptor()
}

func (State) Type() protoreflect.EnumType {
	return &file_protobuf_message_proto_enumTypes[0]
}

func (x State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = State(num)
	return nil
}

// Deprecated: Use State.Descriptor instead.
func (State) EnumDescriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{0}
}

// Nested fields.
type Ballot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch     *uint32 `protobuf:"varint,1,req,name=Epoch" json:"Epoch,omitempty"` // TODO: Change to uint64.
	Number    *uint64 `protobuf:"varint,2,req,name=Number" json:"Number,omitempty"`
	ReplicaID *uint32 `protobuf:"varint,3,req,name=ReplicaID" json:"ReplicaID,omitempty"` // TODO: Change to UUID.
}

func (x *Ballot) Reset() {
	*x = Ballot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ballot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ballot) ProtoMessage() {}

func (x *Ballot) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ballot.ProtoReflect.Descriptor instead.
func (*Ballot) Descriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{0}
}

func (x *Ballot) GetEpoch() uint32 {
	if x != nil && x.Epoch != nil {
		return *x.Epoch
	}
	return 0
}

func (x *Ballot) GetNumber() uint64 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

func (x *Ballot) GetReplicaID() uint32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

// EPaxos messages.
type PreAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID  *uint32  `protobuf:"varint,1,req,name=ReplicaID" json:"ReplicaID,omitempty"`
	InstanceID *uint64  `protobuf:"varint,2,req,name=InstanceID" json:"InstanceID,omitempty"`
	Cmds       [][]byte `protobuf:"bytes,3,rep,name=Cmds" json:"Cmds,omitempty"`
	Deps       []uint64 `protobuf:"varint,4,rep,name=Deps" json:"Deps,omitempty"`
	Ballot     *Ballot  `protobuf:"bytes,5,req,name=Ballot" json:"Ballot,omitempty"`
	From       *uint32  `protobuf:"varint,6,req,name=From" json:"From,omitempty"`
}

func (x *PreAccept) Reset() {
	*x = PreAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreAccept) ProtoMessage() {}

func (x *PreAccept) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreAccept.ProtoReflect.Descriptor instead.
func (*PreAccept) Descriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{1}
}

func (x *PreAccept) GetReplicaID() uint32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *PreAccept) GetInstanceID() uint64 {
	if x != nil && x.InstanceID != nil {
		return *x.InstanceID
	}
	return 0
}

func (x *PreAccept) GetCmds() [][]byte {
	if x != nil {
		return x.Cmds
	}
	return nil
}

func (x *PreAccept) GetDeps() []uint64 {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *PreAccept) GetBallot() *Ballot {
	if x != nil {
		return x.Ballot
	}
	return nil
}

func (x *PreAccept) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

type PreAcceptOK struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID  *uint32 `protobuf:"varint,1,req,name=ReplicaID" json:"ReplicaID,omitempty"`
	InstanceID *uint64 `protobuf:"varint,2,req,name=InstanceID" json:"InstanceID,omitempty"`
	From       *uint32 `protobuf:"varint,3,req,name=From" json:"From,omitempty"`
}

func (x *PreAcceptOK) Reset() {
	*x = PreAcceptOK{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreAcceptOK) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreAcceptOK) ProtoMessage() {}

func (x *PreAcceptOK) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreAcceptOK.ProtoReflect.Descriptor instead.
func (*PreAcceptOK) Descriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{2}
}

func (x *PreAcceptOK) GetReplicaID() uint32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *PreAcceptOK) GetInstanceID() uint64 {
	if x != nil && x.InstanceID != nil {
		return *x.InstanceID
	}
	return 0
}

func (x *PreAcceptOK) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

type PreAcceptReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID  *uint32  `protobuf:"varint,1,req,name=ReplicaID" json:"ReplicaID,omitempty"`
	InstanceID *uint64  `protobuf:"varint,2,req,name=InstanceID" json:"InstanceID,omitempty"`
	Deps       []uint64 `protobuf:"varint,3,rep,name=Deps" json:"Deps,omitempty"`
	Ballot     *Ballot  `protobuf:"bytes,4,req,name=Ballot" json:"Ballot,omitempty"`
	From       *uint32  `protobuf:"varint,5,req,name=From" json:"From,omitempty"`
}

func (x *PreAcceptReply) Reset() {
	*x = PreAcceptReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreAcceptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreAcceptReply) ProtoMessage() {}

func (x *PreAcceptReply) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreAcceptReply.ProtoReflect.Descriptor instead.
func (*PreAcceptReply) Descriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{3}
}

func (x *PreAcceptReply) GetReplicaID() uint32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *PreAcceptReply) GetInstanceID() uint64 {
	if x != nil && x.InstanceID != nil {
		return *x.InstanceID
	}
	return 0
}

func (x *PreAcceptReply) GetDeps() []uint64 {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *PreAcceptReply) GetBallot() *Ballot {
	if x != nil {
		return x.Ballot
	}
	return nil
}

func (x *PreAcceptReply) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

type Accept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID  *uint32  `protobuf:"varint,1,req,name=ReplicaID" json:"ReplicaID,omitempty"`
	InstanceID *uint64  `protobuf:"varint,2,req,name=InstanceID" json:"InstanceID,omitempty"`
	Cmds       [][]byte `protobuf:"bytes,3,rep,name=Cmds" json:"Cmds,omitempty"`
	Deps       []uint64 `protobuf:"varint,4,rep,name=Deps" json:"Deps,omitempty"`
	Ballot     *Ballot  `protobuf:"bytes,5,req,name=Ballot" json:"Ballot,omitempty"`
	From       *uint32  `protobuf:"varint,6,req,name=From" json:"From,omitempty"`
}

func (x *Accept) Reset() {
	*x = Accept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Accept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accept) ProtoMessage() {}

func (x *Accept) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accept.ProtoReflect.Descriptor instead.
func (*Accept) Descriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{4}
}

func (x *Accept) GetReplicaID() uint32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *Accept) GetInstanceID() uint64 {
	if x != nil && x.InstanceID != nil {
		return *x.InstanceID
	}
	return 0
}

func (x *Accept) GetCmds() [][]byte {
	if x != nil {
		return x.Cmds
	}
	return nil
}

func (x *Accept) GetDeps() []uint64 {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *Accept) GetBallot() *Ballot {
	if x != nil {
		return x.Ballot
	}
	return nil
}

func (x *Accept) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

type AcceptReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID  *uint32 `protobuf:"varint,1,req,name=ReplicaID" json:"ReplicaID,omitempty"`
	InstanceID *uint64 `protobuf:"varint,2,req,name=InstanceID" json:"InstanceID,omitempty"`
	Ballot     *Ballot `protobuf:"bytes,3,req,name=Ballot" json:"Ballot,omitempty"`
	From       *uint32 `protobuf:"varint,4,req,name=From" json:"From,omitempty"`
}

func (x *AcceptReply) Reset() {
	*x = AcceptReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptReply) ProtoMessage() {}

func (x *AcceptReply) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptReply.ProtoReflect.Descriptor instead.
func (*AcceptReply) Descriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{5}
}

func (x *AcceptReply) GetReplicaID() uint32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *AcceptReply) GetInstanceID() uint64 {
	if x != nil && x.InstanceID != nil {
		return *x.InstanceID
	}
	return 0
}

func (x *AcceptReply) GetBallot() *Ballot {
	if x != nil {
		return x.Ballot
	}
	return nil
}

func (x *AcceptReply) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

type Prepare struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID  *uint32 `protobuf:"varint,1,req,name=ReplicaID" json:"ReplicaID,omitempty"`
	InstanceID *uint64 `protobuf:"varint,2,req,name=InstanceID" json:"InstanceID,omitempty"`
	Ballot     *Ballot `protobuf:"bytes,3,req,name=Ballot" json:"Ballot,omitempty"`
	From       *uint32 `protobuf:"varint,4,req,name=From" json:"From,omitempty"`
}

func (x *Prepare) Reset() {
	*x = Prepare{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prepare) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prepare) ProtoMessage() {}

func (x *Prepare) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prepare.ProtoReflect.Descriptor instead.
func (*Prepare) Descriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{6}
}

func (x *Prepare) GetReplicaID() uint32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *Prepare) GetInstanceID() uint64 {
	if x != nil && x.InstanceID != nil {
		return *x.InstanceID
	}
	return 0
}

func (x *Prepare) GetBallot() *Ballot {
	if x != nil {
		return x.Ballot
	}
	return nil
}

func (x *Prepare) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

type PrepareReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID      *uint32  `protobuf:"varint,1,req,name=ReplicaID" json:"ReplicaID,omitempty"`
	InstanceID     *uint64  `protobuf:"varint,2,req,name=InstanceID" json:"InstanceID,omitempty"`
	State          *State   `protobuf:"varint,3,req,name=State,enum=epaxos.msg.State" json:"State,omitempty"`
	Cmds           [][]byte `protobuf:"bytes,4,rep,name=Cmds" json:"Cmds,omitempty"`
	Deps           []uint64 `protobuf:"varint,5,rep,name=Deps" json:"Deps,omitempty"`
	Ballot         *Ballot  `protobuf:"bytes,6,req,name=Ballot" json:"Ballot,omitempty"`
	OriginalBallot *Ballot  `protobuf:"bytes,7,req,name=OriginalBallot" json:"OriginalBallot,omitempty"`
	IsFromLeader   *bool    `protobuf:"varint,8,req,name=IsFromLeader" json:"IsFromLeader,omitempty"`
	From           *uint32  `protobuf:"varint,9,req,name=From" json:"From,omitempty"`
}

func (x *PrepareReply) Reset() {
	*x = PrepareReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareReply) ProtoMessage() {}

func (x *PrepareReply) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareReply.ProtoReflect.Descriptor instead.
func (*PrepareReply) Descriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{7}
}

func (x *PrepareReply) GetReplicaID() uint32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *PrepareReply) GetInstanceID() uint64 {
	if x != nil && x.InstanceID != nil {
		return *x.InstanceID
	}
	return 0
}

func (x *PrepareReply) GetState() State {
	if x != nil && x.State != nil {
		return *x.State
	}
	return State_NilStatus
}

func (x *PrepareReply) GetCmds() [][]byte {
	if x != nil {
		return x.Cmds
	}
	return nil
}

func (x *PrepareReply) GetDeps() []uint64 {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *PrepareReply) GetBallot() *Ballot {
	if x != nil {
		return x.Ballot
	}
	return nil
}

func (x *PrepareReply) GetOriginalBallot() *Ballot {
	if x != nil {
		return x.OriginalBallot
	}
	return nil
}

func (x *PrepareReply) GetIsFromLeader() bool {
	if x != nil && x.IsFromLeader != nil {
		return *x.IsFromLeader
	}
	return false
}

func (x *PrepareReply) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

type Commit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicaID  *uint32  `protobuf:"varint,1,req,name=ReplicaID" json:"ReplicaID,omitempty"`
	InstancdID *uint64  `protobuf:"varint,2,req,name=InstancdID" json:"InstancdID,omitempty"`
	Cmds       [][]byte `protobuf:"bytes,3,rep,name=Cmds" json:"Cmds,omitempty"`
	Deps       []uint64 `protobuf:"varint,4,rep,name=Deps" json:"Deps,omitempty"`
	From       *uint32  `protobuf:"varint,5,req,name=From" json:"From,omitempty"`
}

func (x *Commit) Reset() {
	*x = Commit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Commit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Commit) ProtoMessage() {}

func (x *Commit) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Commit.ProtoReflect.Descriptor instead.
func (*Commit) Descriptor() ([]byte, []int) {
	return file_protobuf_message_proto_rawDescGZIP(), []int{8}
}

func (x *Commit) GetReplicaID() uint32 {
	if x != nil && x.ReplicaID != nil {
		return *x.ReplicaID
	}
	return 0
}

func (x *Commit) GetInstancdID() uint64 {
	if x != nil && x.InstancdID != nil {
		return *x.InstancdID
	}
	return 0
}

func (x *Commit) GetCmds() [][]byte {
	if x != nil {
		return x.Cmds
	}
	return nil
}

func (x *Commit) GetDeps() []uint64 {
	if x != nil {
		return x.Deps
	}
	return nil
}

func (x *Commit) GetFrom() uint32 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

var File_protobuf_message_proto protoreflect.FileDescriptor

var file_protobuf_message_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x65, 0x70, 0x61, 0x78, 0x6f, 0x73,
	0x2e, 0x6d, 0x73, 0x67, 0x22, 0x54, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x05, 0x45,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x22, 0xb1, 0x01, 0x0a, 0x09, 0x50,
	0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6d, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x43, 0x6d, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x44, 0x65, 0x70, 0x73, 0x12, 0x2a,
	0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x65, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c,
	0x6f, 0x74, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72,
	0x6f, 0x6d, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x5f,
	0x0a, 0x0b, 0x50, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x4b, 0x12, 0x1c, 0x0a,
	0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d,
	0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52,
	0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x46,
	0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x22,
	0xa2, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04,
	0x44, 0x65, 0x70, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x73,
	0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x22, 0xae, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6d, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x43, 0x6d, 0x64,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x04, 0x44, 0x65, 0x70, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x6d,
	0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x04, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x8b, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x73, 0x67,
	0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x46,
	0x72, 0x6f, 0x6d, 0x22, 0x87, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x04, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x2a, 0x0a,
	0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0xbd, 0x02,
	0x0a, 0x0c, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0d, 0x52, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04,
	0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x65, 0x70,
	0x61, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6d, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x04, 0x43, 0x6d, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x44, 0x65, 0x70, 0x73, 0x12, 0x2a, 0x0a,
	0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x65, 0x70, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x6d, 0x73, 0x67, 0x2e, 0x42,
	0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x52, 0x0e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x42,
	0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0c, 0x49, 0x73, 0x46,
	0x72, 0x6f, 0x6d, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x09, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x82, 0x01,
	0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x09, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x64, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6d, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x43, 0x6d, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x44, 0x65, 0x70, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x04, 0x46, 0x72,
	0x6f, 0x6d, 0x2a, 0x53, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x69, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x72, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x10, 0x05, 0x42, 0x19, 0x5a, 0x17, 0x65, 0x70, 0x61, 0x78, 0x6f,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x3b, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65,
}

var (
	file_protobuf_message_proto_rawDescOnce sync.Once
	file_protobuf_message_proto_rawDescData = file_protobuf_message_proto_rawDesc
)

func file_protobuf_message_proto_rawDescGZIP() []byte {
	file_protobuf_message_proto_rawDescOnce.Do(func() {
		file_protobuf_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_message_proto_rawDescData)
	})
	return file_protobuf_message_proto_rawDescData
}

var file_protobuf_message_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protobuf_message_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_protobuf_message_proto_goTypes = []any{
	(State)(0),             // 0: epaxos.msg.State
	(*Ballot)(nil),         // 1: epaxos.msg.Ballot
	(*PreAccept)(nil),      // 2: epaxos.msg.PreAccept
	(*PreAcceptOK)(nil),    // 3: epaxos.msg.PreAcceptOK
	(*PreAcceptReply)(nil), // 4: epaxos.msg.PreAcceptReply
	(*Accept)(nil),         // 5: epaxos.msg.Accept
	(*AcceptReply)(nil),    // 6: epaxos.msg.AcceptReply
	(*Prepare)(nil),        // 7: epaxos.msg.Prepare
	(*PrepareReply)(nil),   // 8: epaxos.msg.PrepareReply
	(*Commit)(nil),         // 9: epaxos.msg.Commit
}
var file_protobuf_message_proto_depIdxs = []int32{
	1, // 0: epaxos.msg.PreAccept.Ballot:type_name -> epaxos.msg.Ballot
	1, // 1: epaxos.msg.PreAcceptReply.Ballot:type_name -> epaxos.msg.Ballot
	1, // 2: epaxos.msg.Accept.Ballot:type_name -> epaxos.msg.Ballot
	1, // 3: epaxos.msg.AcceptReply.Ballot:type_name -> epaxos.msg.Ballot
	1, // 4: epaxos.msg.Prepare.Ballot:type_name -> epaxos.msg.Ballot
	0, // 5: epaxos.msg.PrepareReply.State:type_name -> epaxos.msg.State
	1, // 6: epaxos.msg.PrepareReply.Ballot:type_name -> epaxos.msg.Ballot
	1, // 7: epaxos.msg.PrepareReply.OriginalBallot:type_name -> epaxos.msg.Ballot
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_protobuf_message_proto_init() }
func file_protobuf_message_proto_init() {
	if File_protobuf_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Ballot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_message_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PreAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_message_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PreAcceptOK); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_message_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PreAcceptReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_message_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Accept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_message_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AcceptReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_message_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Prepare); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_message_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PrepareReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_message_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Commit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_message_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protobuf_message_proto_goTypes,
		DependencyIndexes: file_protobuf_message_proto_depIdxs,
		EnumInfos:         file_protobuf_message_proto_enumTypes,
		MessageInfos:      file_protobuf_message_proto_msgTypes,
	}.Build()
	File_protobuf_message_proto = out.File
	file_protobuf_message_proto_rawDesc = nil
	file_protobuf_message_proto_goTypes = nil
	file_protobuf_message_proto_depIdxs = nil
}
